* Transform the hooks in modulinos.

* Devise and implement a way for the plugins to register their
  configuration options and a suitable routine in Git::Hooks to grok
  them all. This would simplify plugin option processing.

* Implement the examples in https://github.com/schacon/githooks.

* Perhaps implement a kind of DENY for ACL operations, along the lines
  of NFSv4 ACLs (http://tools.ietf.org/html/rfc5661#section-6). I'm
  thinking about prefixing the what component with a '!'.

* Use tidyall
  (http://www.openswartz.com/2012/08/21/one-tidier-to-rule-them-all/).

* Implement equivalents for the following SVN::Hooks
  (http://search.cpan.org/dist/SVN-Hooks/) plugins: CheckStructure,
  CheckLog, DenyFilenames, UpdateConfFile.

* Let the user tell which configuration files Git::Hooks should
  consider. Currently it considers the three default ones (system,
  global, and local), without knowing which one sets what. Perhaps we
  could have a new option "githooks.extra_config" that could be set
  with an array of filenames to invoke "git config --file" with in
  succession. This option, if set in the default configuration files,
  could tell Git::Hooks to grok an extra set of configuration from
  specific files.
